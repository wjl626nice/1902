# 函数，
'''
函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。

函数能提高应用的模块性，和代码的重复利用率。你已经知道Python提供了许多内建函数，比如print()。但你也可以自己创建函数，这被叫做用户自定义函数。

定义一个函数规则：
    1.函数代码块以 def 关键词开头，后接函数标识符名称和圆括号 ()。
    2.任何传入参数和自变量必须放在圆括号中间，圆括号之间可以用于定义参数。
    3.函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。
    4.函数内容以冒号起始，并且缩进。
    5.return [表达式] 结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回 None。

定义函数的语法：

def 函数名（参数列表）:
    函数体
'''


def sum(n1, n2):
    """
    计算两个数字之和
    :param n1:
    :param n2:
    :return:
    """
    return n1 + n2


result1 = sum(1, 2)
print(result1)

result2 = sum(2, 2)
print(result2)

'''
变量的类型是由值决定的，
类型可以分为：
    可变              列表，字典，集合，等等
    不可变             数字，字符串，元组
    
把变量当成参数传递到函数中的时候，注意：
    不可变类型的变量，传递到函数中的时候，是传递的值
    可变类型的变量，传递到函数中的时候，是传递的变量的地址
'''


def fn1(n):
    return n + 1


a = 10
print("a: %d" % a)
c = fn1(a)
print("a: %d" % a)


def fn2(m, n):
    del m[n]


b = [1, 2, 3, 4, 5, 6, 7]
print(b)
fn2(b, 0)
print(b)

d = ["a", "b", "c", "d"]
# 必需参数
# 函数在调用的时候，传递的参数跟定义的参数要保持数量相同，顺序相同，否则的话会抛出异常
# fn2(d, 3)


# 关键字参数
# 使用关键字参数允许函数调用时参数的顺序与声明时不一致，因为 Python 解释器能够用参数名匹配参数值。
d = ["a", "b", "c", "d"]
print(d)
fn2(n=2, m=d)
print(d)

'''
定义一个形参有默认值的函数，有默认值的形参需要书写在没有默认值的形参的后面
'''


def fn3(m, index=0):
    del m[index]


e = ["zs", "ls", "sy", "nb", "dd"]
print("e: %s" % str(e))
# fn3(e)
fn3(e, 2)
print("e: %s" % str(e))
