1、演示例子
   B/S架构
   浏览器（socket客户端）
       3、客户端向服务器端发起请求（http请求）
       6、客户端接收
       7、关闭
   服务器（socket服务器端）
       1、启动、监听
       2、阻塞等待客户端的链接
       4、服务器端接收消息（http请求结构体）
       5、服务器端处理请求信息，然后回复消息（http响应）
       7、关闭

   浏览器和服务器之间的通信要遵守http协议：
        http协议组成：request（请求）、响应（response）
            请求（request）:
                请求行\r\n
                请求头\r\n\r\n
                请求主体  可以为空
            响应（response）:
                响应行\r\n
                响应头\r\n\r\n
                响应正文

   url：统一资源定位符
   uri：统一资源标识符

   动态网页：
        要了解模板的概念，本质就是对静态页面中的标签进行替换成对应内容

        替换的过程发生在服务器端处理函数内。

   总结：
       1、web(B/S)本质：
            socket服务器和浏览器之间的通信
       2、socket服务器的功能：
            a、负责对浏览器消息的接收和发送                        (python类似模块 wsgiref/uwsgi等)
            b、根据用户访问不同的url执行不同的处理函数
            c、获取html页面内容，对页面的内容进行替换   （jinjia2 模板引擎）
       3、python框架分类：
          根据socket服务器的功能划分的：
            1、框架自带a、b、c           ------> Tornade
            2、框架自带b和c,使用第三方a   ------>  Django
            3、框架自带b,使用第三方的a,c  ------>  Flask
       总体来说Django功能还是比较全，web站需要的功能它都包含，文档很多，适合新手学习。Flask是一个
       轻量级的框架，只拥有核心的功能。
            网站一般功能比较少的选择flask,如果功能比较多，要求复杂，那么可以选择Django。
            以后工作根据实际情况来选择对应的框架。

       WSGI在web服务器和web框框之间起作用：就是一个纽带一样，将web服务器和web框架链接起来。
       wsgiref 是对wsgi的实现也是扩展了wsgi,它是一个模块：负责对浏览器消息的接收和发送。wsgiref是python内置的一个模块
       ---->对浏览器发送http请求结构体进行拆分解析
       ---->按http协议规定的响应拼组成响应结构

2、django
